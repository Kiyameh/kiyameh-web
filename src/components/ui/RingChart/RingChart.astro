---
interface Props {
	title?: string;
	data: { name: string; value: number }[];
}

// 1. Obtener las props y establecer valores por defecto
const { data } = Astro.props;

if (!data || data.length === 0) {
	return null;
}

const COLORS = [
	"#3b82f6",
	"#10b981",
	"#f97316",
	"#ef4444",
	"#8b5cf6",
	"#06b6d4",
	"#ec4899",
	"#facc15",
];

// 2. Calcular el valor total sumando todos los `value` del array de datos
const totalValue = data.reduce((sum, item) => sum + item.value, 0);

// 3. Procesar y ordenar los datos
const chartData = [...data] // Crear una copia para no mutar las props originales
	.sort((a, b) => b.value - a.value) // Ordenar de mayor a menor valor
	.map((item, index) => ({
		...item,
		percentage: totalValue > 0 ? (item.value / totalValue) * 100 : 0,
		color: COLORS[index % COLORS.length],
	}));

// 4. Generar dinÃ¡micamente la cadena de texto para `conic-gradient`
let cumulativePercentage = 0;
const gradientParts = chartData.map((item) => {
	const start = cumulativePercentage;
	cumulativePercentage += item.percentage;
	const end = cumulativePercentage;
	return `${item.color} ${start}% ${end}%`;
});

const gradientString = `conic-gradient(${gradientParts.join(", ")})`;
---

<div class="chart-container">
  <div
    class="donut-chart"
    style={`background: ${gradientString};`}
  >
  </div>

  <div class="legend">
    {
      chartData.map((item) => (
        <div class="legend-item">
          <div
            class="legend-color"
            style={`background-color: ${item.color};`}
          />
          <span>
            {item.name}: {item.percentage.toFixed(2)}%
          </span>
        </div>
      ))
    }
  </div>
</div>

<style>
  .chart-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 2rem;
  }

  .donut-chart {
    position: relative;
    width: 150px;
    height: 150px;
    border-radius: 200px;
  }

  .donut-chart::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 75%;
    height: 75%;
    background: var(--surface-300);
    border-radius: 200px;
  }

  .legend {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .legend-item {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 0.875rem;
  }

  .legend-color {
    width: 20px;
    height: 20px;
    border-radius: 5px;
    flex-shrink: 0;
  }
</style>
