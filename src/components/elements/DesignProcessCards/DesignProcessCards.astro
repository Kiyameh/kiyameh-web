---
import {SpotlightButton, StickyCard} from 'need-more-gradients-ui'

import cursorSvg from '@/assets/ui-pieces/cursor.svg'
import measure1Svg from '@/assets/ui-pieces/measure1.svg'
import measure2Svg from '@/assets/ui-pieces/measure2.svg'
import bg1 from '@/assets/backgrounds/bg1.svg'
import bg_grid from '@/assets/backgrounds/bg_grid.svg'
import {Image} from 'astro:assets'

interface Props {
  language: 'en' | 'es'
}

const {language = 'en'} = Astro.props as Props

const TEXTS = {
  en: {
    designTitle: 'Design',
    designDescription:
      'I create intuitive and visually appealing interfaces that prioritize user experience. From wireframes to high-fidelity mockups, I ensure every design decision serves the user.',
    layoutTitle: 'Layout',
    layoutDescription:
      'I transform designs into responsive layouts using modern CSS techniques. I focus on creating flexible, accessible, and performant structures that work across all devices.',
    interactivityTitle: 'Interactivity',
    interactivityDescription:
      'I bring interfaces to life with smooth animations and interactive elements. Using JavaScript and modern frameworks, I create engaging user experiences that feel natural and responsive.',
    designCardTitle: 'Design',
    designCardDescription: 'The soul and the heart of awesome interfaces',
    designCardButton: 'Awsm button',
    structureCardTitle: 'Structure',
    structureCardDescription: 'Responsiveness, accessibility and SEO',
    structureCardButton: 'aria-check',
    interactivityCardTitle: 'Interactivity',
    interactivityCardDescription:
      'Where design comes alive through motion and logic',
    interactivityCardButton: "Let's do it",
  },
  es: {
    designTitle: 'Diseño',
    designDescription:
      'Creo interfaces intuitivas y visualmente atractivas que priorizan la experiencia del usuario. Desde wireframes hasta mockups de alta fidelidad, me aseguro de que cada decisión de diseño sirva al usuario.',
    layoutTitle: 'Maquetación',
    layoutDescription:
      'Transformo diseños en layouts responsivos usando técnicas CSS modernas. Me enfoco en crear estructuras flexibles, accesibles y performantes que funcionen en todos los dispositivos.',
    interactivityTitle: 'Interactividad',
    interactivityDescription:
      'Doy vida a las interfaces con animaciones suaves y elementos interactivos. Usando JavaScript y frameworks modernos, creo experiencias de usuario atractivas que se sienten naturales y responsivas.',
    designCardTitle: 'Diseño',
    designCardDescription: 'El alma y el corazón de interfaces increíbles',
    designCardButton: 'Botón asombroso',
    structureCardTitle: 'Estructura',
    structureCardDescription: 'Responsividad, accesibilidad y SEO',
    structureCardButton: 'aria-check',
    interactivityCardTitle: 'Interactividad',
    interactivityCardDescription:
      'Donde el diseño cobra vida a través del movimiento y la lógica',
    interactivityCardButton: '¡Hagámoslo!',
  },
}

const {
  designCardTitle,
  designCardDescription,
  designCardButton,
  structureCardTitle,
  structureCardDescription,
  structureCardButton,
  interactivityCardTitle,
  interactivityCardDescription,
  interactivityCardButton,
} = TEXTS[language]
---

<arcticle class="design-process-box">
  <div class="design-card card">
    <Image
      src={cursorSvg}
      alt="Cursor"
      class="cursor-svg"
    />
    <Image
      src={measure1Svg}
      alt="Measure 1"
      class="measure-1"
    />
    <Image
      src={measure2Svg}
      alt="Measure 2"
      class="measure-2"
    />
    <span class="bubble-1"></span>
    <span class="bubble-2"></span>
    <h3 class="card-title">{designCardTitle}</h3>
    <p class="card-description">
      {designCardDescription}
    </p>
    <button class="card-button">
      {designCardButton}
    </button>
  </div>
  <Image
    src={bg_grid}
    alt="bg-grid"
    class="bg-grid"
  />
  <div class="structure-card card">
    <code>&lt;div&gt;</code>
    <h3 class="card-title">
      <code>&lt;h3&gt;</code>
      <span>{structureCardTitle}</span>
      <code>&lt;/h3&gt;</code>
    </h3>
    <p class="card-description">
      <code>&lt;p&gt;</code>
      {structureCardDescription}
      <code>&lt;/p&gt;</code>
    </p>
    <button class="card-button">
      <code>&lt;button&gt;</code>
      {structureCardButton}
    </button>
  </div>
  <div class="interactivity-card card">
    <StickyCard
      client:load
      roundness={2}
      borderWidth={2}
      style={{
        padding: '3rem 2rem',
        minHeight: '300px',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'start',
        justifyContent: 'space-between',
        gap: '1rem',
      }}
    >
      <h3 class="card-title fantasy-text">{interactivityCardTitle}</h3>
      <p class="card-description">
        {interactivityCardDescription}
      </p>
      <SpotlightButton
        client:load
        primary
        roundness={0.6}
        borderWidth={2}
        className="interactivity-button"
      >
        <a href={`/${language}/#contact`}> {interactivityCardButton} </a>
      </SpotlightButton>
    </StickyCard>
  </div>
  <Image
    src={bg1}
    alt="bg-1"
    class="bg-1"
  />
</arcticle>

<style>
  /* Design Process */
  .design-process-box {
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 4rem;
    padding: 10rem 1rem 10rem 1rem;
    overflow: hidden;
  }

  @media (min-width: 1280px) {
    .design-process-box {
      gap: 6rem;
      align-items: start;
      flex-direction: row;
      max-width: 80lvw;
    }
    .card:nth-child(1) {
      margin-top: 4rem;
    }
    .card:nth-child(3) {
      margin-top: 8rem;
    }
    .card:nth-child(4) {
      margin-top: 12rem;
    }
  }

  /* Cards common styles */

  .card {
    width: 100%;
    max-width: 360px;
    min-height: 300px;
    padding: 3rem 2rem;
    font-size: 1.2rem;
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: space-between;
    gap: 1rem;
  }

  .card > button {
    color: var(--content);
    width: 100%;
    height: 3rem;
    border: 1px solid var(--border-soft);
    padding: 0.5rem 1rem;
    border-radius: 0.7rem;
  }

  /* Design card */
  .design-card {
    border-radius: 2rem;
    background: linear-gradient(
      140deg,
      var(--surface-100),
      var(--surface-100),
      var(--surface-200),
      transparent
    );

    font-family: var(--font-sans);
    font-weight: 300;
    position: relative;
  }
  .design-card::before {
    content: '';
    position: absolute;
    background: transparent;
    pointer-events: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 2rem;
    border: 2px solid #60b7ff;
    clip-path: polygon(0% 0%, 100% 0%, 100% 70%, 60% 100%, 0% 100%);
  }
  .bg-grid {
    position: absolute;
    top: 50lvh;
    left: 0;
    z-index: -1;
    pointer-events: none;
  }

  .design-card .card-title {
    font-size: 4rem;
    color: transparent;
    -webkit-text-stroke: 1px var(--border-soft);
    text-stroke: 1px var(--border-soft);
  }
  /* Cursor SVG en design card */
  .cursor-svg {
    position: absolute;
    bottom: -40px;
    left: 60%;
    width: 40px;
    height: auto;
    z-index: 10;
    pointer-events: none;
    opacity: 0.7;
  }
  .bubble-1 {
    position: absolute;
    top: 70%;
    right: -2px;
    width: 8px;
    height: 8px;
    border-radius: 22px;
    border: 2px solid #60b7ff;
  }
  .bubble-2 {
    position: absolute;
    bottom: -3px;
    left: 60%;
    width: 8px;
    height: 8px;
    border-radius: 22px;
    border: 2px solid #60b7ff;
  }

  .measure-1 {
    position: absolute;
    top: 2rem;
    left: 40px;
    width: 40px;
    height: auto;
    z-index: 10;
    pointer-events: none;
    opacity: 0.7;
  }

  .measure-2 {
    position: absolute;
    top: -30px;
    right: -40px;
    width: 80px;
    height: auto;
    z-index: 10;
    pointer-events: none;
    opacity: 0.7;
  }

  /* Structure card */
  .structure-card {
    background: var(--surface-100);
    border-radius: 2rem;
    border: 1px solid var(--border-soft);
    font-family: var(--font-mono);
    position: relative;
  }

  .structure-card .card-title {
    font-size: 2.2rem;
    display: flex;
    align-items: center;
    justify-content: start;
    flex-wrap: wrap;
  }

  .structure-card code {
    color: var(--primary);
    font-size: 0.9rem;
    font-weight: bold;
  }

  .structure-card > code {
    padding: 0.2rem 0.7rem;
    background: inherit;
    border: inherit;
    border-radius: 0.5rem;
    position: absolute;
    top: -15px;
    left: 30px;
  }

  .structure-card > h3 {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  .structure-card > p > code {
    display: inline;
  }
  .structure-card > button {
    position: relative;
    background: var(--surface-200);
  }
  .structure-card > button > code {
    position: absolute;
    top: 50%;
    left: -20px;
    transform: translateY(-50%);
    padding: 6px 12px;
    background: inherit;
    border: inherit;
    border-radius: 0.5rem;
  }

  /* Interactivity card */
  .interactivity-card .card-title {
    font-size: 2.5rem;
  }
  .interactivity-card {
    padding: 0;
    border-radius: 2rem;
    box-shadow: var(--shadow-large);
  }
  .interactivity-button {
    width: 100%;
    height: 3rem;
  }

  .bg-1 {
    position: absolute;
    z-index: -1;
    pointer-events: none;
    right: 0;
    bottom: 0;
    opacity: 0.5;
    filter: blur(100px);
  }
</style>
